var Main, main,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

main = null;

Main = (function() {
  Main.prototype.dt = 0;

  Main.prototype.lastTime = 0;

  Main.prototype.pause = false;

  function Main() {
    this.resize = __bind(this.resize, this);
    this.update = __bind(this.update, this);
    this.pause = false;
    this.lastTime = Date.now();
    window.focus();
    Stage3d.init({
      transparent: false,
      antialias: true,
      background: 0x0000FF
    });
    SceneTraveler.to(new LoaderScene());
    requestAnimationFrame(this.update);
    return;
  }

  Main.prototype.update = function() {
    var dt, t;
    t = Date.now();
    dt = t - this.lastTime;
    this.lastTime = t;
    if (this.pause) {
      return;
    }
    SceneTraveler.update(dt);
    Stage3d.render();
    requestAnimationFrame(this.update);
  };

  Main.prototype.resize = function() {
    var height, width;
    width = window.innerWidth;
    height = window.innerHeight;
    SceneTraveler.resize();
  };

  return Main;

})();

document.addEventListener('DOMContentLoaded', function() {
  main = new Main();
  window.onblur = function(e) {
    main.pause = true;
    cancelAnimationFrame(main.update);
  };
  window.onfocus = function() {
    requestAnimationFrame(main.update);
    main.lastTime = Date.now();
    main.pause = false;
  };
  window.onresize = function() {
    main.resize();
  };
});

//# sourceMappingURL=data:application/json;base64,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QSxDQWJsQixDQUQ2QztBQUFBLENBQTlDLENBOUNBLENBQUEiLCJmaWxlIjoiTWFpbi5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbIiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIEdsb2JhbCB2YXJcblxubWFpbiA9IG51bGxcblxuIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gQ2xhc3MgTWFpblxuXG5jbGFzcyBNYWluXG5cblx0ZHQgXHRcdFx0XHQ6IDBcblx0bGFzdFRpbWUgXHRcdDogMFxuXHRwYXVzZSBcdFx0XHQ6IGZhbHNlXG5cblx0Y29uc3RydWN0b3I6KCktPlxuXHRcdEBwYXVzZSA9IGZhbHNlXG5cdFx0QGxhc3RUaW1lID0gRGF0ZS5ub3coKVxuXHRcdHdpbmRvdy5mb2N1cygpXG5cdFx0U3RhZ2UzZC5pbml0KHt0cmFuc3BhcmVudDpmYWxzZSxhbnRpYWxpYXM6dHJ1ZSwgYmFja2dyb3VuZDoweDAwMDBGRn0pXG5cdFx0XG5cdFx0U2NlbmVUcmF2ZWxlci50byggbmV3IExvYWRlclNjZW5lKCkgKVxuXG5cdFx0cmVxdWVzdEFuaW1hdGlvbkZyYW1lKCBAdXBkYXRlIClcblx0XHRyZXR1cm5cblxuXHR1cGRhdGU6KCk9PlxuXHRcdHQgPSBEYXRlLm5vdygpXG5cdFx0ZHQgPSB0IC0gQGxhc3RUaW1lXG5cdFx0QGxhc3RUaW1lID0gdFxuXG5cdFx0aWYgQHBhdXNlIHRoZW4gcmV0dXJuXG5cblx0XHQjIHVwZGF0ZSBsb2dpYyBoZXJlXG5cdFx0U2NlbmVUcmF2ZWxlci51cGRhdGUoZHQpXG5cdFx0XG5cdFx0IyByZW5kZXIgZnJhbWVcblx0XHRTdGFnZTNkLnJlbmRlcigpXG5cblx0XHRyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoIEB1cGRhdGUgKVxuXHRcdHJldHVyblxuXG5cdHJlc2l6ZTooKT0+XG5cdFx0d2lkdGggXHQ9IHdpbmRvdy5pbm5lcldpZHRoXG5cdFx0aGVpZ2h0IFx0PSB3aW5kb3cuaW5uZXJIZWlnaHRcblx0XHRTY2VuZVRyYXZlbGVyLnJlc2l6ZSgpXG5cdFx0cmV0dXJuXG5cblxuIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gb24gRG9jdW1lbnQgUmVhZHlcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpLT5cblx0bWFpbiA9IG5ldyBNYWluKClcblx0XG5cdHdpbmRvdy5vbmJsdXIgPSAoZSktPlxuXHRcdG1haW4ucGF1c2UgPSB0cnVlXG5cdFx0Y2FuY2VsQW5pbWF0aW9uRnJhbWUobWFpbi51cGRhdGUpXG5cdFx0cmV0dXJuXG5cblx0d2luZG93Lm9uZm9jdXMgPSAoKS0+XG5cdFx0cmVxdWVzdEFuaW1hdGlvbkZyYW1lKG1haW4udXBkYXRlKVxuXHRcdG1haW4ubGFzdFRpbWUgPSBEYXRlLm5vdygpXG5cdFx0bWFpbi5wYXVzZSA9IGZhbHNlXG5cdFx0cmV0dXJuXG5cblx0d2luZG93Lm9ucmVzaXplID0gKCktPlxuXHRcdG1haW4ucmVzaXplKClcblx0XHRyZXR1cm5cblxuXHRyZXR1cm5cbikiXX0=