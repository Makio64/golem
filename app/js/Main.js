var Main, main,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

main = null;

Main = (function() {
  Main.prototype.dt = 0;

  Main.prototype.lastTime = 0;

  Main.prototype.pause = false;

  function Main() {
    this.resize = __bind(this.resize, this);
    this.update = __bind(this.update, this);
    this.pause = false;
    this.lastTime = Date.now();
    window.focus();
    Stage3d.init({
      transparent: false,
      antialias: true,
      background: 0x0000FF
    });
    SceneTraveler.to(new LoaderScene());
    requestAnimationFrame(this.update);
    return;
  }

  Main.prototype.update = function() {
    var dt, t;
    t = Date.now();
    dt = t - this.lastTime;
    this.lastTime = t;
    if (this.pause) {
      return;
    }
    SceneTraveler.update(dt);
    Stage3d.render();
    requestAnimationFrame(this.update);
  };

  Main.prototype.resize = function() {
    var height, width;
    width = window.innerWidth;
    height = window.innerHeight;
    Stage3d.resize();
    SceneTraveler.resize();
  };

  return Main;

})();

document.addEventListener('DOMContentLoaded', function() {
  main = new Main();
  window.onresize = function() {
    main.resize();
  };
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1haW4uY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLElBQUEsVUFBQTtFQUFBLGtGQUFBOztBQUFBLElBQUEsR0FBTyxJQUFQLENBQUE7O0FBQUE7QUFNQyxpQkFBQSxFQUFBLEdBQVMsQ0FBVCxDQUFBOztBQUFBLGlCQUNBLFFBQUEsR0FBYSxDQURiLENBQUE7O0FBQUEsaUJBRUEsS0FBQSxHQUFXLEtBRlgsQ0FBQTs7QUFJWSxFQUFBLGNBQUEsR0FBQTtBQUNYLDJDQUFBLENBQUE7QUFBQSwyQ0FBQSxDQUFBO0FBQUEsSUFBQSxJQUFDLENBQUEsS0FBRCxHQUFTLEtBQVQsQ0FBQTtBQUFBLElBQ0EsSUFBQyxDQUFBLFFBQUQsR0FBWSxJQUFJLENBQUMsR0FBTCxDQUFBLENBRFosQ0FBQTtBQUFBLElBRUEsTUFBTSxDQUFDLEtBQVAsQ0FBQSxDQUZBLENBQUE7QUFBQSxJQUdBLE9BQU8sQ0FBQyxJQUFSLENBQWE7QUFBQSxNQUFDLFdBQUEsRUFBWSxLQUFiO0FBQUEsTUFBbUIsU0FBQSxFQUFVLElBQTdCO0FBQUEsTUFBbUMsVUFBQSxFQUFXLFFBQTlDO0tBQWIsQ0FIQSxDQUFBO0FBQUEsSUFLQSxhQUFhLENBQUMsRUFBZCxDQUFzQixJQUFBLFdBQUEsQ0FBQSxDQUF0QixDQUxBLENBQUE7QUFBQSxJQU9BLHFCQUFBLENBQXVCLElBQUMsQ0FBQSxNQUF4QixDQVBBLENBQUE7QUFRQSxVQUFBLENBVFc7RUFBQSxDQUpaOztBQUFBLGlCQWVBLE1BQUEsR0FBTyxTQUFBLEdBQUE7QUFDTixRQUFBLEtBQUE7QUFBQSxJQUFBLENBQUEsR0FBSSxJQUFJLENBQUMsR0FBTCxDQUFBLENBQUosQ0FBQTtBQUFBLElBQ0EsRUFBQSxHQUFLLENBQUEsR0FBSSxJQUFDLENBQUEsUUFEVixDQUFBO0FBQUEsSUFFQSxJQUFDLENBQUEsUUFBRCxHQUFZLENBRlosQ0FBQTtBQUlBLElBQUEsSUFBRyxJQUFDLENBQUEsS0FBSjtBQUFlLFlBQUEsQ0FBZjtLQUpBO0FBQUEsSUFPQSxhQUFhLENBQUMsTUFBZCxDQUFxQixFQUFyQixDQVBBLENBQUE7QUFBQSxJQVVBLE9BQU8sQ0FBQyxNQUFSLENBQUEsQ0FWQSxDQUFBO0FBQUEsSUFZQSxxQkFBQSxDQUF1QixJQUFDLENBQUEsTUFBeEIsQ0FaQSxDQURNO0VBQUEsQ0FmUCxDQUFBOztBQUFBLGlCQStCQSxNQUFBLEdBQU8sU0FBQSxHQUFBO0FBQ04sUUFBQSxhQUFBO0FBQUEsSUFBQSxLQUFBLEdBQVMsTUFBTSxDQUFDLFVBQWhCLENBQUE7QUFBQSxJQUNBLE1BQUEsR0FBVSxNQUFNLENBQUMsV0FEakIsQ0FBQTtBQUFBLElBRUEsT0FBTyxDQUFDLE1BQVIsQ0FBQSxDQUZBLENBQUE7QUFBQSxJQUdBLGFBQWEsQ0FBQyxNQUFkLENBQUEsQ0FIQSxDQURNO0VBQUEsQ0EvQlAsQ0FBQTs7Y0FBQTs7SUFORCxDQUFBOztBQUFBLFFBK0NRLENBQUMsZ0JBQVQsQ0FBMEIsa0JBQTFCLEVBQThDLFNBQUEsR0FBQTtBQUM3QyxFQUFBLElBQUEsR0FBVyxJQUFBLElBQUEsQ0FBQSxDQUFYLENBQUE7QUFBQSxFQWFBLE1BQU0sQ0FBQyxRQUFQLEdBQWtCLFNBQUEsR0FBQTtBQUNqQixJQUFBLElBQUksQ0FBQyxNQUFMLENBQUEsQ0FBQSxDQURpQjtFQUFBLENBYmxCLENBRDZDO0FBQUEsQ0FBOUMsQ0EvQ0EsQ0FBQSIsImZpbGUiOiJNYWluLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gR2xvYmFsIHZhclxuXG5tYWluID0gbnVsbFxuXG4jLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBDbGFzcyBNYWluXG5cbmNsYXNzIE1haW5cblxuXHRkdCBcdFx0XHRcdDogMFxuXHRsYXN0VGltZSBcdFx0OiAwXG5cdHBhdXNlIFx0XHRcdDogZmFsc2VcblxuXHRjb25zdHJ1Y3RvcjooKS0+XG5cdFx0QHBhdXNlID0gZmFsc2Vcblx0XHRAbGFzdFRpbWUgPSBEYXRlLm5vdygpXG5cdFx0d2luZG93LmZvY3VzKClcblx0XHRTdGFnZTNkLmluaXQoe3RyYW5zcGFyZW50OmZhbHNlLGFudGlhbGlhczp0cnVlLCBiYWNrZ3JvdW5kOjB4MDAwMEZGfSlcblx0XHRcblx0XHRTY2VuZVRyYXZlbGVyLnRvKCBuZXcgTG9hZGVyU2NlbmUoKSApXG5cblx0XHRyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoIEB1cGRhdGUgKVxuXHRcdHJldHVyblxuXG5cdHVwZGF0ZTooKT0+XG5cdFx0dCA9IERhdGUubm93KClcblx0XHRkdCA9IHQgLSBAbGFzdFRpbWVcblx0XHRAbGFzdFRpbWUgPSB0XG5cblx0XHRpZiBAcGF1c2UgdGhlbiByZXR1cm5cblxuXHRcdCMgdXBkYXRlIGxvZ2ljIGhlcmVcblx0XHRTY2VuZVRyYXZlbGVyLnVwZGF0ZShkdClcblx0XHRcblx0XHQjIHJlbmRlciBmcmFtZVxuXHRcdFN0YWdlM2QucmVuZGVyKClcblxuXHRcdHJlcXVlc3RBbmltYXRpb25GcmFtZSggQHVwZGF0ZSApXG5cdFx0cmV0dXJuXG5cblx0cmVzaXplOigpPT5cblx0XHR3aWR0aCBcdD0gd2luZG93LmlubmVyV2lkdGhcblx0XHRoZWlnaHQgXHQ9IHdpbmRvdy5pbm5lckhlaWdodFxuXHRcdFN0YWdlM2QucmVzaXplKClcblx0XHRTY2VuZVRyYXZlbGVyLnJlc2l6ZSgpXG5cdFx0cmV0dXJuXG5cblxuIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gb24gRG9jdW1lbnQgUmVhZHlcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpLT5cblx0bWFpbiA9IG5ldyBNYWluKClcblx0XG5cdCMgd2luZG93Lm9uYmx1ciA9IChlKS0+XG5cdCMgXHRtYWluLnBhdXNlID0gdHJ1ZVxuXHQjIFx0Y2FuY2VsQW5pbWF0aW9uRnJhbWUobWFpbi51cGRhdGUpXG5cdCMgXHRyZXR1cm5cblxuXHQjIHdpbmRvdy5vbmZvY3VzID0gKCktPlxuXHQjIFx0cmVxdWVzdEFuaW1hdGlvbkZyYW1lKG1haW4udXBkYXRlKVxuXHQjIFx0bWFpbi5sYXN0VGltZSA9IERhdGUubm93KClcblx0IyBcdG1haW4ucGF1c2UgPSBmYWxzZVxuXHQjIFx0cmV0dXJuXG5cblx0d2luZG93Lm9ucmVzaXplID0gKCktPlxuXHRcdG1haW4ucmVzaXplKClcblx0XHRyZXR1cm5cblxuXHRyZXR1cm5cbikiXX0=